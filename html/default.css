@charset "utf-8";
/* html reset*/ 

 header,
 footer,
 section,
 article,
 nav,
 aside, 
 main,
 figure,
 figcaption{ 
  display: block;
}

html,
body{min-height: 100%}
body{
	margin:0;
}
/*여기부터 2월 26일 */
body,
table,
button,
input,
textarea,
select{
  font-size: 14px;
}
/*여기부터 2월 26일 수저 */
body
/*all*/
/* 해상도 상관없는 공통 디자인요소를 찾는다 background는 background-image와 같다*/
body{background-image: -webkit-linear-gradient(#ccc,#fff); }
body{background-image: -moz-gradient(#ccc,#fff); }
body{background-image: -ms-linear-gradient(#ccc,#fff); }
body{background-image: -o-linear-gradient(#ccc,#fff); }
body{background-image: linear-gradient(#ccc,#fff); }
/*이 다섯개는 각각의 브라우저에 맞게 구문을 복사해서 한 거임/ 이것들은 표준 속성은 아니지만 이전부터 
옛날 업데이트 버젼이 아니면 위중 하나를 골라 인식하게 된다. 브라우저 호환성이 높아짐! webkit(크롬, 사파리)
항상 나중에 선언한 코드를 오버라이드 하면서 우선순위가 높아진다.또한 백그라운드는 반복되게 된다.
body 요소의 기본 높이는 0px 내용이 들어가는 만큼 커지는 것! 자동으로 늘어나
근데 문제는 바디 요소 안에 내용이 항상 들어 있는 건 아니야 그러면 백그라운드가 반복되게 된다.
그래서 그라디언트가 viewport 전체에 보이게 할려면 다음과 같이 한다. 
html,
body{min-height: 100%}
) 
*/
.header>h1{
	 font-size: 28px; 
     text-shadow:1px 1px 2px #fff;
    }

/*'>'는 자식 요소 그리니까 header 중의 h1만 선택한다. font-weight: normal;는 보통 굵기/ normal은 400, bold 700 이런 식으로 표현가능
문제는 400, 700만 브라우저가 지원함  그냥 숫자로 css 압축할 때 줄여 숫자로 표현 / 그림자의 x 좌표 y좌표 밀도 색 이 순서로 해야 한다. 또한 그림자를
여러개를 넣을 수 있다.  */


.search>input{vertical-align:top;
border-radius: 3px;
}
/*input 관련은 인라인 블럭 버티걸 얼라인은 인라인에만 적용되는데
인라인 블럭이기에 적용가능 보더 레디우스는 좌축 상단 꼭지점에서부터 시작하여 시계방향으로 적용
모두 동일하게 적용하면 한번만 쓰면 된다 */
.search>[type="search"]
  {border: 1px solid #ccc;
   height: 32px; 
   width: 160px;
   box-shadow : 0 0 4px #ccc  inset;
    }

.search>[type="submit"]
    { height: 32px;
      width: 50px;
      background: #fff;
      border: 1px solid #ccc;
      box-shadow : 0 0 4px #aaa;
}

main,
 .lnb
 .aside{
   margin-bottom:  15px;
 }

main{
  background: #fff;
  box-shadow: 0 0 4px #999;
  box-shadow: 0 0 4px rgba(0,0,0,0.3);
  border-radius: 8px;
  min-height: 300px;

}

/*여기부터 2월 26일 새로 추가(이때 서영이 졸업이라 일찍 나가서 그럼  */

.lnb ul,
.aside ul{
    margin:0;
    padding:0;
    list-style: :none;
}

.lnb{text-shadow: 1px 1px 0 #333;}

.lnb h2{
    background:  #666;
    border-radius: 4px 4px 0 0;
    font-size: 14px;
    color: #fff;
    padding: 0 10px; /*0 10px 0 10px 동의어*/
    line-height: 32px;
    margin: 0;
}

.lnb ul{ margin: 0;
         padding: 0; 
         list-style: none;}/*  둘 모두 0 0 0 0 의 축약
         그리고 리스트 스타일은 ul ol 에서만 적용 */
.lnb li{
        margin: 1px 0;
}
.lnb a{display:  block;
       background: #777;
       padding: 0 10px;
       line-height: : 32px;
       text-decoration: none; 
       color: #fff;
       transition:0.2s;}

      /* 트렌지션은 아래 호버에 선언한 것의 변화 속도 만약 호버에 이 위의 속성과 다른
      속성이 있다면 그게 1초안에 변화가 생성되는 것! 0.2는 .2로 권장된다. 0은 생*/

.lnb li:last-child>a{
      border-radius: 0 0 4px 4px;
           
}

.lnb a:hover,
.lan a:focus{
      background: #555;

}

/*hover는 마우스가 올라가 있을 때의 상태 이건 굳이 메뉴 아니어도 된
테이블 tr:hover 이런 식으로 된다, 근데 a에서 써라 성능상 문제가 없다. 포커스는 키보드 상에서 효과가 나타나는 것 */
/*css는 나중에 마크업 한게 우선순위가 높다, #main과 main은 우선순위가 다랄진다.
동시에 #를 붙이면 선택자가 더 구체적이 되므로 이 #을 붙이거나 .body>main 같이  더 우선순위가 높아진다 
만약 동시 다발적으로 작업할 떄는 더 구체적인 것부터 하는 것부터 그냥 main으로 크게 들어가는 게
더 좋을 듯 하다 단 같은 속성을 서로 적용했을 경우 우선순위가 생긴다.*/
/* 박스 그림자도 텍스트 쉐도우와 마찬가지 
 insert는 안쪽에    box-shadow : 0 0 4px #ccc  inset;  
 rgba 에서 a는 투명도 익스플로러 7/8에서는 적용 안됨

 이럴 경우는

  background: #fff;
   box-shadow: 0 0 4px #999
  box-shadow: 0 0 4px rgba(0,0,0,0.3);
이렇게 아래는 이해 못해도 중간은 이해함. */

/* search는 한 문서에 한 번만 들어간다. 해더 안에 있지만 그래서 그냥 쓸수 있다. 
지금 input 둘 중 클래스를 따로 주지 않고 그 속성만으로 선택할 수 있다.
.search>[type="search"] 이렇게 쓸 수 있다. 높이 넓이가 32px 이상 되어야 한다. 접근성 지침이 그러함   */


/* Mobile */
.container{
    margin:0 10px;
}

/*왜 모바일에 미디어 커리를 사용않나요? 근데 문제는 옛날 스마트 폰은 아직도 쓰고 있어 그럼 css3가 지원이 안돼! 
 그래서 삽질 같지만 호환성을 높이기 위해 해야 돼! 모바일 스타일 시트를 먼저 작성하고 그 다음에 태블릿 데스크탑으로 오버라이드 하는 것
 모바일 퍼스트 css 스타일 기법이라 한다. 한국 사람들은 대부분 이 경우에 속하지 않지만 국제적으로 했을때  */


/*Tablet&Desktop */

@media only all and (min-width:768px){body{background : ;}}


/*Tablet*/

@media only all and (min-width:768px) and (max-width: 1024px){body{background : ;}}

/* and는 두 조건이 모두 참일 때만 작용된다. css 코드는 다른 값을 썼을  떄 나중에 선언된 코드가 덮어쓰기 한다. 그니까 레드가 아닌 그린! 
즉 768px 일때는 같은 조건에서 마지막에 코딩 된 것이 우선순위가 높다! 이 말은 만약 1024px을 넘어서면 위의 빨간색이 나타남
위의 미디어 쿼리는 충족 조건이 하나* 근데 만약 아래로 태그가 충족된다. 1024이 넘으면 근데 지금 모든 코드가 적용 꼬인다.
그래서 1024가 아니라 1025로 적용해야 한다. 머리를 잘 굴려라! 


/**/
/*desktop*/
@media only all and (min-width:1025px){body{background : ;}}
/* ''>' 표시는 자식 선택자를 의미한다. 이건 자식이야 이런 의미  */